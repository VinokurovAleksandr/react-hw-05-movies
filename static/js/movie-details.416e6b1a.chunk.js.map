{"version":3,"file":"static/js/movie-details.416e6b1a.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieDetailsInfo/MovieDetailsInfo.styled.js","components/MovieDetailsInfo/MovieDetailsInfo.jsx","components/Pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin: 20px 0 20px 0;\n\n\n  \n\n  &:hover,\n  :focus {\n    color: rgb(81, 124, 232);\n  }\n`;","import { MdArrowBackIosNew } from 'react-icons/md';\nimport { StyledLink } from './BackLink.styled';\n\n\n\n\n\nexport const BackLink = ({to}) => {\n\n    return (\n        <StyledLink  to={to}>\n            <MdArrowBackIosNew />\n           Go back\n        </StyledLink>\n    )\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Main = styled.main`\n    width: 1200px;\n   \n`;\nexport const Container = styled.div`\n  display: flex;\n\n\n  \n`;\n\n\nexport const Title = styled.h2`\n    font-weight: 700;\n    font-size: 36px;\n    line-height: 1.5;\n    text-transform: uppercase;\n    margin-bottom: 28px;\n\n`;\nexport const MovieImg = styled.img`\n    width: 320px;\n    margin-right: 20px;\n\n\n`;\nexport const MovieSubTitle = styled.p`\n    display: flex;\n    color: gray;\n    margin-right: 20px;\n\n    font-size: 24px;\n    line-height: 16px;\n    color: #8c8c8c;\n\n    width: 160px;\n    margin-right: 40px;\n`;\n\nexport const VoteWrapper = styled.div`\n    display: flex;\n    align-items:baseline;\n    margin: 30px 0px 30px 0px;\n`;\n\nexport const AboutTitle = styled.h2`\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.6;\n  text-transform: uppercase;\n  margin-bottom: 12px;\n`;\nexport const AddTitle = styled.h2`\n\n  text-align: center;\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 1.5;\n    text-transform: uppercase;\n    margin: 30px 0 28px 0;\n`;\n\n\n\nexport const Text = styled.p`\n   \n    margin: 8px 0 20px;\n    font-size: 25px;\n    line-height: 1;\n    font-weight: 400;\n`;\n\nexport const FlexContainer = styled.div`\n margin-left: 50px;\n\n`;\nexport const CastListSyled = styled.div`\n \n  list-style: none;\n  display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 20px;\n    margin-bottom: 40px;\n\n`;\nexport const ItemStyledLink = styled(NavLink)`\n    \n    display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 10px;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.17;\n  text-transform: uppercase;\n  color: #212121;\n\n  border: none;\n  border-radius: 5px;\n  width: 160px;\n  height: 44px;\n  background-color: rgb(112, 128, 144);\n  box-shadow: 0px 9px 8px 0px rgba(34, 60, 80, 0.2);\n  transition-property: background-color, color, border;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n\n\n  &.active {\n    background-color: rgb(81, 124, 232);\n    color: #ffffff;\n    border: transparent;\n\n  }\n\n  &:hover,\n  :focus:not(.active) {\n    background-color: rgb(81, 124, 232);\n    color: #ffffff;\n    border: transparent;\n    \n  }\n  \n`;\nexport const ReviewsItemStyled = styled.li`\n\n`;\nexport const VoteAverage = styled.span`\n    font-size: 24px;\n  line-height: 16px;\n    \n\n\n`;\n\n\n\n\n","import { useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport noPhoto from 'components/images/no-image-available.jpg';\n\nimport {\n    Main,\n    Container,\n    Title,\n    MovieImg,\n    MovieSubTitle,\n    Text,\n    CastListSyled,\n    ItemStyledLink,\n    VoteWrapper,\n    FlexContainer,\n    VoteAverage,\n    AboutTitle,\n    AddTitle,\n} from './MovieDetailsInfo.styled'\n\nexport const MovieDetailsInfo = ({ movie }) => {\n\n    const location = useLocation();\n    const backPageLink = location.state?.from ?? '/';\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    \n    const {\n        title,\n        release_date,\n        poster_path,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        genres = [],\n        \n    } = movie;\n\n    return (\n        <>\n            {movie && (\n                <Main>\n                    <BackLink to={backLinkHref} />\n                    \n                    <Container>\n                    \n                            <MovieImg src={poster_path\n                            ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                            : noPhoto}\n                            alt={title} />\n                       \n                       \n                        <FlexContainer>\n                            \n                       \n                         <Title>\n                            {title} {release_date && (new Date(release_date).getFullYear() || 'Unknown') }\n                        </Title>\n                        \n                        \n                            <VoteWrapper>\n                                <MovieSubTitle>Vote/Votes</MovieSubTitle>\n                                \n                                <VoteAverage>\n                                {vote_average && Number(vote_average).toFixed(2)} / {vote_count}\n                                    </VoteAverage>\n                                \n                            </VoteWrapper>\n                            \n\n                            <VoteWrapper>\n                                      <MovieSubTitle>Popularity</MovieSubTitle>\n                                <VoteAverage>\n                                    {popularity && Number(popularity).toFixed(1)}\n                                 </VoteAverage>\n                            </VoteWrapper>\n                      \n                        \n                            <VoteWrapper>\n                                   <MovieSubTitle>Genres</MovieSubTitle>\n                        <VoteAverage>\n                            {genres.map(gerne => gerne.name).join(\", \")}\n                        </VoteAverage>\n                        </VoteWrapper>\n                      \n                        <AboutTitle>About </AboutTitle>\n                        <Text>{overview}</Text>\n                    </FlexContainer>\n                        </Container>\n                        \n                    <AddTitle>Additional information</AddTitle>\n                    <FlexContainer>\n                        \n                        <CastListSyled>                           \n                                <ItemStyledLink to=\"cast\" state={{ from: backPageLink }}>Cast</ItemStyledLink>\n                                <ItemStyledLink to=\"reviews\" state={{ from: backPageLink }}>Reviews</ItemStyledLink>\n                        </CastListSyled>\n\n                        <hr />\n                    </FlexContainer>\n                </Main>\n            )}\n        </>\n       \n    )\n\n};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet} from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport { fetchMovieDetails } from 'components/API/Api'\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieDetailsInfo } from 'components/MovieDetailsInfo/MovieDetailsInfo';\n\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        const getMovieDetails = async () => {\n            try {\n                setLoading(true)\n                const result = await fetchMovieDetails(movieId)\n              \n              \n                setMovie(result)\n            } catch (error) {\n                toast.error('Sorry, we could not find info about this movie');\n                \n            } finally {\n                setLoading(false)\n            }\n        }\n        getMovieDetails()\n    }, [movieId]);\n\n\n    return (\n        <>\n            {loading && <Loader loading={loading} />}\n            <MovieDetailsInfo movie={movie} />\n            <Outlet />\n        </>\n    )\n};\n\nexport default MovieDetails;"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","BackLink","_ref","to","_jsxs","children","_jsx","MdArrowBackIosNew","Main","Container","_templateObject2","Title","_templateObject3","MovieImg","_templateObject4","MovieSubTitle","_templateObject5","VoteWrapper","_templateObject6","AboutTitle","_templateObject7","AddTitle","_templateObject8","Text","_templateObject9","FlexContainer","_templateObject10","CastListSyled","_templateObject11","ItemStyledLink","_templateObject12","VoteAverage","_templateObject13","_templateObject14","MovieDetailsInfo","_location$state$from","_location$state","_location$state$from2","_location$state2","movie","location","useLocation","backPageLink","state","from","backLinkHref","title","release_date","poster_path","vote_average","vote_count","popularity","overview","_movie$genres","genres","_Fragment","src","noPhoto","alt","Date","getFullYear","Number","toFixed","map","gerne","name","join","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","useEffect","getMovieDetails","_asyncToGenerator","_callee","_context","fetchMovieDetails","t0","toast","apply","arguments","Loader","Outlet"],"sourceRoot":""}
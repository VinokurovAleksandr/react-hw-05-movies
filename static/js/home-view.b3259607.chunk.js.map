{"version":3,"file":"static/js/home-view.b3259607.chunk.js","mappings":"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","sources":["components/HomeView/HomeView.styled.js","components/HomeView/HomeView.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\n\n\nexport const MoviesTitle = styled.h2`\npadding: 30px 0px 30px 0px;\n\ntext-align: center;\ntext-transform: uppercase;\n\n`;","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\n\n\nimport { MoviesTitle } from './HomeView.styled';\nimport { fetchTrendingMovies } from 'components/API/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nimport { Loader } from 'components/Loader/Loader';\n\n\n const HomeView = () => {\n    \n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n\n    useEffect(() => {\n\n        const getMovies = async () => {\n            try {\n                setLoading(true)\n                const { results } = await fetchTrendingMovies();\n                setMovies(results)\n            } catch (error) {\n                toast.error('Sorry, something went wrong. Try reloading the page');\n            } finally {\n                setLoading(false)\n            }\n \n        };\n        \n        getMovies();\n  }, []);\n    \n    return (\n        <>\n            <main>\n            {loading && <Loader loading={ loading} />}\n            <MoviesTitle>Tending today</MoviesTitle>  \n                <MovieList movies={movies} /> \n                  \n            </main>\n         \n            \n        </>       \n    )\n};\n\nexport default HomeView;","\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n    max-width: 1200px;\n    padding: 5px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    padding: 0;\n    list-style: none;\n  \n\n`;\n\nexport const MovieItem = styled.li`\n   \n    flex-basis: calc((100% - 20px) / 6);\n    padding: 10px;\n    border-radius: 4px;\n    \n         &:hover {\n        transform: scale(1.03);\n         cursor: pointer;\n         \n         transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n        \n    } \n    \n       \n`;\n\nexport const MovieImage = styled.img`\n    width: 200px;\n    height: 300px;\n    margin-bottom: 10px;\n    \n    border-radius: 5px;\n\n`;\n\nexport const MovieTitle = styled.p`\n    \n    text-align: center;\n    color: black;\n   \n\n\n`;\n\nexport const MovieLink = styled(NavLink)`\n    ${'' /* gap: 10px; */}\n    text-align: center;\n    color: black;\n    text-decoration: none;\n    padding: 12px;\n    \n\n \n\n`;\n\n\n","import { useLocation } from 'react-router-dom';\nimport noPhoto from 'components/images/no-image-available.jpg';\nimport {\n    List,\n    MovieItem,\n    MovieImage,\n    MovieTitle,\n    MovieLink,\n    MovieContainer\n    } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n\n    const location = useLocation();\n\n    return (\n        \n        <>\n            <MovieContainer>\n            <List>\n                {movies.map(({id,poster_path,title,release_date}) =>\n\n                    <MovieItem key={id}>\n\n                        <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                            <MovieImage\n                                width='200 px'\n                                src={poster_path\n                                    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                                    : noPhoto}\n                                alt={title} />\n                            <MovieTitle>\n                                {title} ({new Date(release_date).getFullYear()})\n                            </MovieTitle></MovieLink>\n                \n                  \n                    </MovieItem>\n                )}\n            </List>\n            </MovieContainer>\n            \n           \n        </>\n    )\n};"],"names":["MoviesTitle","styled","_templateObject","_taggedTemplateLiteral","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","useEffect","getMovies","_ref","_asyncToGenerator","_callee","_yield$fetchTrendingM","results","_context","fetchTrendingMovies","t0","toast","apply","arguments","_jsx","_Fragment","children","_jsxs","Loader","MovieList","MovieContainer","List","_templateObject2","MovieItem","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","MovieLink","NavLink","_templateObject6","location","useLocation","map","_ref2","id","poster_path","title","release_date","to","concat","from","width","src","noPhoto","alt","Date","getFullYear"],"sourceRoot":""}